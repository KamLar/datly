init:
  app: datly
  sdk: go:1.15
  appPath: $Pwd(..)
  buildPath: /tmp/build/datly
  runPath:  /tmp/app/datly


  bqCredentials: gcp-e2e
  mysqlCredentials: mysql-e2e
  mysqlSecrets: ${secrets.$mysqlCredentials}
  pgCredentials: pg-e2e
  pgSecrets: ${secrets.$pgCredentials}

  awsCredentials: aws-e2e
  awsMysqlCredentials: aws-mysql-e2e
  awsMysqlSecrets: ${secrets.$awsMysqlCredentials}
  awsConfigBucket: viant-e2e-config

  local:
    ruleURL: ${runPath}/config/rules
    connectorURL: ${runPath}/config/connectors
    templateURL: ${runPath}/config/tmpl
    endpoint: http://127.0.0.1:8080/

  awsConfigURL: s3://${awsConfigBucket}/Datly/config
  awsLocation:
    ruleURL: ${awsConfigURL}/rules
    connectorURL: ${awsConfigURL}/connectors
    templateURL: ${awsConfigURL}/tmpl

  runStandAlone: true
  runOnAws: false
  useDockerDBIP: false


  dbIP:
    mysql: 127.0.0.1
    awsMysql: $awsMysqlSecrets.Endpoint
    pg: 127.0.0.1

pipeline:

  init:
    system:
      action: run
      request: '@system'
      tasks: '*'

    fetchDbIp:
      when: $useDockerDBIP
      action: run
      request: '@dbip.yaml'

    dbInfo:
      action: print
      message: $AsJSON($dbIP)

    datastore:
      action: run
      request: '@datastore'
      tasks: '*'

    app:
      action: run
      request: '@app'
      tasks: '*'

  test:

    fetchDbIp:
      when: $useDockerDBIP
      action: run
      request: '@dbip.yaml'

    runTest:
      action: run
      request: '@regression/regression'
      tasks: '*'


CREATE TABLE USER (
    ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255),
    ACCOUNT_ID INT
);

CREATE TABLE VENDOR(
    ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME  VARCHAR(255),
    ACCOUNT_ID INT,
    CREATED DATETIME,
    USER_CREATED INT,
    UPDATED DATETIME,
    USER_UPDATED INT
);

CREATE TABLE PRODUCT (
    ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME  VARCHAR(255),
    VENDOR_ID INT,
    STATUS INT,
    CREATED DATETIME,
    USER_CREATED INT,
    UPDATED DATETIME,
    USER_UPDATED INT
);

CREATE TABLE PRODUCT_JN(
    PRODUCT_ID INT NOT NULL,
    USER_ID    INT,
    OLD_VALUE  VARCHAR(255),
    NEW_VALUE  VARCHAR(255),
    CREATED DATETIME
);


DELIMITER $$
CREATE FUNCTION IS_VENDOR_AUTHORIZED(USER_ID INT, VENDOR_ID INT)
RETURNS BOOLEAN
BEGIN
    DECLARE IS_AUTH BOOLEAN;
    SELECT TRUE INTO IS_AUTH
                FROM VENDOR  v
                WHERE ID = VENDOR_ID AND ACCOUNT_ID AND
                      EXISTS (SELECT 1 FROM USER u WHERE u.ID = USER_ID  AND u.ACCOUNT_ID = v.ACCOUNT_ID);
    RETURN IS_AUTH;
END $$
DELIMITER;



DELIMITER $$
CREATE FUNCTION IS_PRODUCT_AUTHORIZED(USER_ID INT, PRODUCT_ID INT)
    RETURNS BOOLEAN
BEGIN
    DECLARE IS_AUTH BOOLEAN;
SELECT TRUE INTO IS_AUTH
FROM VENDOR  v
JOIN PRODUCT p ON v.ID = p.VENDOR_ID
WHERE ID = VENDOR_ID AND ACCOUNT_ID AND
    EXISTS (SELECT 1 FROM USER u
                     WHERE u.ID = USER_ID  AND u.ACCOUNT_ID = v.ACCOUNT_ID);
RETURN IS_AUTH;
END $$
DELIMITER;


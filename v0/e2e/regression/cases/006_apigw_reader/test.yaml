init:
  parentIndex: ${parent.index}

pipeline:
  run:
    when: $runOnAws
    prepare:
      db1:
        register:
          action: dsunit:register
          datastore: db
          config:
            driverName: mysql
            descriptor: '[username]:[password]@tcp(${dbIP.awsMysql}:3306)/[dbname]?parseTime=true'
            credentials: $awsMysqlCredentials
        populate:
          action: dsunit:prepare
          datastore: db
          URL:  ${parent.path}/db/prepare

    cleanUp:
      action: storage:remove
      sleepTimeMs: 1000
      assets:
        - URL: '${awsLocation.ruleURL}/case_${parentIndex}'
          Credentials: $awsCredentials

    setupRule:
      action: storage:copy
      expand: true
      source:
        URL: ${parent.path}/rule/
      dest:
        URL: ${awsLocation.ruleURL}/case_${parentIndex}
        Credentials: $awsCredentials

    test:
      matchEvents:
        action: 'rest/runner:send'
        Method: GET
        URL: ${awsEndpointURL}case_${parentIndex}/events
        expect:
          Status: ok
          '@assertPath@Data.events[0].id': 1
          '@length@Data.events': 11
      applySelector:
        action: 'rest/runner:send'
        Method: GET
        URL: ${awsEndpointURL}case_${parentIndex}/events?_limit=3&_orderBy=id
        expect:
          Status: ok
          '@assertPath@Data.events[0].id': 1
          '@length@Data.events': 3



  #  info:
  #    action: print
  #    message: $AsJSON(${readAll})
